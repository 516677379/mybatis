project.name=pro1

server.port=9000

####################################mysql【使用下方druid后 此处省略】######################################################
##MySQL在高版本需要指明是否进行SSL连接 否则报ssl的错误
#spring.datasource.url = jdbc:mysql://localhost:3306/mytest?characterEncoding=utf8&useSSL=true
#spring.datasource.username = root
#spring.datasource.password =  tiger
#spring.datasource.driverClassName = com.mysql.jdbc.Driver
#spring.datasource.max-active=20
#spring.datasource.max-idle=8
#spring.datasource.min-idle=8
#spring.datasource.initial-size=10

###################################################################################################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/mytest?useUnicode=true&characterEncoding=utf8&useSSL=true
spring.datasource.username=root
spring.datasource.password=tiger
spring.datasource.driverClassName=com.mysql.jdbc.Driver
#为实体对象所在的包，跟数据库表一一对应
mybatis.typeAliasesPackage=com.mybatis.modles
#mapper文件的位置
#mybatis.mapperLocations=classpath:mapper/*.xml

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

#页面热加载 页面缓存
####################################thymeleaf######################################################
#spring.thymeleaf.prefix=classpath:/views/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html  
spring.thymeleaf.cache=false

####################################redis######################################################
#整合redis，使用redis实现缓存
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址，单机
spring.redis.host=127.0.0.1
# Redis服务器连接端口，单机
spring.redis.port=6379
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0
spring.redis.commandTimeout=5000
#
#spring.redis.cluster.nodes=127.0.0.1:6379
## Redis服务器连接密码（默认为空）
#spring.redis.password=
##############################################################################################


####################################logging######################################################
logging.config=classpath:config/logback-spring.xml

####################################logging######################################################
server.jsp-servlet.init-parameters.development=true